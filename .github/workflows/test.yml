name: Run RabbitMQ messaging tests

on:
  push:
  pull_request:

jobs:
  container-test:
    runs-on: ubuntu-latest
    services:
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672/tcp
        # needed because the rabbitmq container does not provide a healthcheck
        options: --health-cmd "rabbitmqctl node_health_check" --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Node v14
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install Poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Add path for Poetry
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Load cached venv
        id: cache-venv
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: poetry install

      - name: Load cached node_module
        id: cache-node_module
        uses: actions/cache@v2
        with:
          path: ./ui/node_modules
          key: node_module-${{ runner.os }}-${{ hashFiles('**/ui/package-lock.json') }}

      - name: Install Node Modules
        if: steps.cache-node_module.outputs.cache-hit != 'true'
        working-directory: ./ui
        run: npm install

      - name: Run Tests
        run: poetry run pytest tests

      - name: Check code style with Black
        run: poetry run black --check --diff .

      - name: Check code style with Prettier
        working-directory: ./ui
        run: npx prettier --check .
